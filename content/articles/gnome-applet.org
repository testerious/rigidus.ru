-*- mode: org; fill-column: 95 -*-
@title Написание аплета GNOME на С
@category other
@sort other001

Отчасти чтобы не забыть, отчасти в надежде что кому-то это будет
полезно оставлю информацию о написании аплета для gnome-panel`и. Я
делал это на си.

Сначала о том, как сделать правильно, а потом о том, как сделать
универсально.

Итак, чтобы сделать правильно, необходимо прочитать вот этот документ:
Writing Gnome Applets in Gnome2, рассказывающий о том, как сделать
Hello World с отображением запущенного приложения в панели. Там
главным образом о том, куда положить какие файлы, чтобы апплет можно
было выбрать в диалоговом окне "Add to Panel".

Я решил подойти к этому с другой стороны и написал просто приложение,
которое добавляет иконку на панель с помощью некоторых вызовов GTK.

Итак, чтобы ваша иконка появилась на панели необходимо сделать
следующее:

1. Скачать библитечку (2 файла: 'eggtrayicon.h' и 'eggtrayicon.c' ) и
   посмотреть пример ее использования
   <a href"http://www.quietearth.us/articles/2007/01/23/Howto-Code-a-gnome-panel-applet">отсюда</a>

2. Прочитать несколько первых страниц из руководства по GTK:
   <a href="http://linfoline.homedns.org/gtk/">http://linfoline.homedns.org/gtk/</a>


Чтобы добавить свою иконку на панель я использовал следующий код:

* Код

<source lang="c">
static EggTrayIcon *docklet = NULL;
GtkWidget *box;
GtkWidget *window;
GtkWidget *button;
GtkWidget *image;

docklet = egg_tray_icon_new("Rigidus");
box = gtk_event_box_new();
image = gtk_image_new_from_file ("main.png");
gtk_container_add(GTK_CONTAINER(box), image);
gtk_container_add(GTK_CONTAINER(docklet), box);

if(!gtk_check_version(2,4,0)) {
g_object_set(G_OBJECT(box), "visible-window", FALSE, NULL);
}
// Link to signal
g_signal_connect(G_OBJECT(box), "button-press-event", G_CALLBACK(docklet_button_press), NULL);
// Show applet
gtk_widget_show_all(GTK_WIDGET(docklet));
</source>

Тут все понятно без объяснений. Иногда нужно изменить внешний вид
иконки в зависимости от произошедших в вашей программе событий. В этом
случае поступаем так:

* Перерисовка

<source lang="c">
// Replace icon
gtk_container_remove(GTK_CONTAINER(box), image);
image = gtk_image_new_from_file ("main.png");
gtk_container_add(GTK_CONTAINER(box), image);
gtk_widget_show(GTK_WIDGET(image));
</source>

И наконец, если вам нужно рисовать иконку на лету (например, если вы
делаете аплет, который показывает вам количество непрочитанных писем в
почте), то можно воспользоваться библиотекой cairo:

** Cairo

<source lang="c">
// Cairo
cairo_surface_t *surface;
cairo_t *cr;

surface = cairo_image_surface_create (CAIRO_FORMAT_ARGB32, 24, 24);
cr = cairo_create (surface);

cairo_select_font_face (cr, "serif", CAIRO_FONT_SLANT_NORMAL, CAIRO_FONT_WEIGHT_BOLD);
cairo_set_font_size (cr, 14.0);
cairo_set_source_rgb (cr, 1.0, 0.0, 0.0);
cairo_move_to (cr, 2.0, 17.0);
cairo_show_text (cr, buffer);
cairo_destroy (cr);
cairo_surface_write_to_png (surface, "main.png");
cairo_surface_destroy (surface);
</source>

Надеюсь приведенный код говорит сам за себя. В любом случае, отвечу на
возникшие вопросы. Ах да, чуть не забыл - компилировать это можно вот
так:

<source lang="bash">
#! /bin/sh
gcc `pkg-config --cflags gtk+-2.0 pkg-config --libs gtk+-2.0 --libs gthread-2.0 ` -c main.c
gcc `pkg-config --cflags gtk+-2.0` -c eggtrayicon.c
gcc `pkg-config --cflags --libs gtk+-2.0 --libs gthread-2.0` main.o eggtrayicon.o -o main
</source>

И последнее - заголовочные файлы, которые необходимо включить:

* Заголовки

<source lang="c">
#include <stdio.h>
#include <gtk/gtk.h>
#include "eggtrayicon.h"

#include <sched.h>
#include <pthread.h>
#include <errno.h>
#include <unistd.h>
#include <fcntl.h>

#include <cairo.h>

#include <glib.h>
</source>
